'use client';

import { useState } from 'react';
import BackToPlanButton from '@/components/content/BackToPlanButton';
import Link from 'next/link';
import { ArrowLeft, ChevronDown, ChevronRight, BookOpen, Target, Lightbulb, CheckCircle } from 'lucide-react';
import { motion, AnimatePresence } from 'framer-motion';

interface Exercise {
  id: number;
  title: string;
  context: string;
  question: string;
  solution: string[];
  methodology: string[];
  tips: string[];
}

const exercises: Exercise[] = [
  {
    id: 1,
    title: "Analyse des √©carts d&apos;un projet SI",
    context: "Une entreprise d√©veloppe un nouveau syst√®me de gestion commerciale. Apr√®s 6 mois de d√©veloppement, voici les donn√©es du projet :\n\n‚Ä¢ Budget initial : 200 000 ‚Ç¨\n‚Ä¢ Avancement pr√©vu : 60%\n‚Ä¢ Avancement r√©el : 45%\n‚Ä¢ Co√ªts r√©els engag√©s : 110 000 ‚Ç¨",
    question: "Calculez et analysez les √©carts de co√ªts et de d√©lais. Que recommandez-vous ?",
    solution: [
      "**Calcul des indicateurs :**",
      "‚Ä¢ CBTP = 200 000 √ó 60% = 120 000 ‚Ç¨",
      "‚Ä¢ CBTE = 200 000 √ó 45% = 90 000 ‚Ç¨",
      "‚Ä¢ CRTE = 110 000 ‚Ç¨",
      "",
      "**Calcul des √©carts :**",
      "‚Ä¢ √âcart de co√ªts = CRTE - CBTE = 110 000 - 90 000 = +20 000 ‚Ç¨",
      "‚Ä¢ √âcart de d√©lais = CBTE - CBTP = 90 000 - 120 000 = -30 000 ‚Ç¨",
      "",
      "**Analyse :**",
      "‚Ä¢ √âcart de co√ªts positif : gaspillage de 20 000 ‚Ç¨ (d√©passement budg√©taire)",
      "‚Ä¢ √âcart de d√©lais n√©gatif : retard √©quivalent √† 30 000 ‚Ç¨ de travail",
      "‚Ä¢ Le projet co√ªte plus cher que pr√©vu ET prend du retard",
      "",
      "**Recommandations :**",
      "‚Ä¢ Analyser les causes du gaspillage (ressources mal utilis√©es ?)",
      "‚Ä¢ Revoir la planification pour rattraper le retard",
      "‚Ä¢ Mettre en place un suivi hebdomadaire renforc√©",
      "‚Ä¢ √âvaluer le &apos;reste √† faire&apos; pour ajuster le budget final"
    ],
    methodology: [
      "1. Identifier les 3 indicateurs cl√©s (CBTP, CBTE, CRTE)",
      "2. Calculer les √©carts (co√ªts et d√©lais)",
      "3. Interpr√©ter les signes (+ = d√©passement, - = √©conomie/retard)",
      "4. Analyser les causes racines",
      "5. Proposer des actions correctives"
    ],
    tips: [
      "üí° M√©moriser : CRTE - CBTE = √©cart de co√ªts",
      "üìä Un √©cart positif = mauvaise nouvelle (d√©passement)",
      "‚è∞ Toujours analyser les deux √©carts ensemble",
      "üéØ Proposer des actions concr√®tes et mesurables"
    ]
  },
  {
    id: 2,
    title: "Gestion des risques d&apos;un projet ERP",
    context: "Votre entreprise lance un projet d&apos;impl√©mentation ERP. L&apos;√©quipe projet a identifi√© plusieurs risques potentiels :\n\n‚Ä¢ R√©sistance au changement des utilisateurs\n‚Ä¢ Complexit√© technique sous-estim√©e\n‚Ä¢ Indisponibilit√© des experts m√©tier\n‚Ä¢ Probl√®mes d&apos;int√©gration avec les syst√®mes existants",
    question: "Utilisez la m√©thode des 6M pour analyser ces risques et proposez un plan de traitement.",
    solution: [
      "**Analyse par les 6M :**",
      "",
      "**Main d'≈ìuvre :**",
      "‚Ä¢ R√©sistance au changement ‚Üí Formation, communication",
      "‚Ä¢ Indisponibilit√© experts ‚Üí Planning d√©di√©, backup",
      "",
      "**M√©thodes :**",
      "‚Ä¢ Processus mal d√©finis ‚Üí Cartographie d√©taill√©e",
      "‚Ä¢ M√©thodologie projet inadapt√©e ‚Üí Approche agile",
      "",
      "**Mat√©riel :**",
      "‚Ä¢ Infrastructure insuffisante ‚Üí Audit technique pr√©alable",
      "‚Ä¢ Serveurs sous-dimensionn√©s ‚Üí Tests de charge",
      "",
      "**Mati√®re :**",
      "‚Ä¢ Donn√©es de mauvaise qualit√© ‚Üí Nettoyage pr√©alable",
      "‚Ä¢ Migration complexe ‚Üí Plan de migration d√©taill√©",
      "",
      "**Milieu :**",
      "‚Ä¢ Probl√®mes d'int√©gration ‚Üí Tests d'int√©gration pr√©coces",
      "‚Ä¢ Environnement instable ‚Üí Environnement de test d√©di√©",
      "",
      "**Management :**",
      "‚Ä¢ Manque de soutien direction ‚Üí Sponsoring visible",
      "‚Ä¢ Communication insuffisante ‚Üí Plan de communication",
      "",
      "**Plan de traitement :**",
      "‚Ä¢ Risques critiques : traitement pr√©ventif obligatoire",
      "‚Ä¢ Risques moyens : surveillance et plans de contingence",
      "‚Ä¢ Risques faibles : acceptation avec monitoring"
    ],
    methodology: [
      "1. Lister tous les risques identifi√©s",
      "2. Classer chaque risque dans une cat√©gorie des 6M",
      "3. √âvaluer probabilit√© √ó impact pour chaque risque",
      "4. D√©finir une strat√©gie : √©viter, r√©duire, transf√©rer, accepter",
      "5. √âlaborer des plans d'action pr√©ventifs et correctifs",
      "6. Mettre en place un suivi r√©gulier"
    ],
    tips: [
      "üîç Les 6M couvrent TOUS les aspects d'un projet",
      "‚öñÔ∏è Prioriser selon la criticit√© (probabilit√© √ó impact)",
      "üõ°Ô∏è Toujours avoir un plan B pour les risques majeurs",
      "üìã Documenter et suivre l&apos;√©volution des risques"
    ]
  },
  {
    id: 3,
    title: "√âvaluation qualit√© d&apos;une application",
    context: "Vous devez √©valuer la qualit√© d&apos;une application de gestion des stocks d√©velopp√©e en interne. L&apos;application pr√©sente les caract√©ristiques suivantes :\n\n‚Ä¢ Toutes les fonctionnalit√©s demand√©es sont pr√©sentes\n‚Ä¢ Interface utilisateur complexe, formation n√©cessaire\n‚Ä¢ Temps de r√©ponse lents sur certaines requ√™tes\n‚Ä¢ Code source mal document√©\n‚Ä¢ Compatible uniquement avec Windows\n‚Ä¢ Co√ªt de maintenance √©lev√©",
    question: "Analysez cette application selon les 4 axes qualit√© et proposez des am√©liorations prioritaires.",
    solution: [
      "**Analyse par les 4 axes qualit√© :**",
      "",
      "**1. Axe Fonctionnel :**",
      "‚Ä¢ ‚úÖ Pertinence : Toutes les fonctionnalit√©s pr√©sentes",
      "‚Ä¢ ‚úÖ Ad√©quation : R√©pond aux besoins m√©tier",
      "‚Ä¢ ‚ö†Ô∏è G√©n√©ralit√© : Sp√©cifique √† un contexte",
      "**‚Üí Score : 7/10**",
      "",
      "**2. Axe Utilisation :**",
      "‚Ä¢ ‚ùå Facilit√© d'emploi : Interface complexe",
      "‚Ä¢ ‚ùå Efficacit√© : Temps de r√©ponse lents",
      "‚Ä¢ ‚ö†Ô∏è Confidentialit√© : Non √©valu√©e",
      "**‚Üí Score : 4/10**",
      "",
      "**3. Axe Maintenance :**",
      "‚Ä¢ ‚ùå Maintenabilit√© : Code mal document√©",
      "‚Ä¢ ‚ö†Ô∏è Fiabilit√© : Pas d'information sur les bugs",
      "**‚Üí Score : 3/10**",
      "",
      "**4. Axe √âconomique :**",
      "‚Ä¢ ‚ùå Interop√©rabilit√© : Windows uniquement",
      "‚Ä¢ ‚ùå Adaptabilit√© : Co√ªt de maintenance √©lev√©",
      "‚Ä¢ ‚ùå Portabilit√© : Mono-plateforme",
      "**‚Üí Score : 2/10**",
      "",
      "**Am√©liorations prioritaires :**",
      "1. **Urgent** : Optimiser les performances (axe utilisation)",
      "2. **Important** : Refactoring et documentation du code",
      "3. **Moyen terme** : Am√©liorer l'ergonomie de l'interface",
      "4. **Long terme** : Portage multi-plateforme"
    ],
    methodology: [
      "1. √âvaluer chaque facteur qualit√© sur une √©chelle (ex: 1-10)",
      "2. Identifier les axes les plus faibles",
      "3. Prioriser selon l'impact utilisateur et le co√ªt",
      "4. D√©finir un plan d'am√©lioration progressive",
      "5. Mettre en place des m√©triques de suivi"
    ],
    tips: [
      "üìä Utiliser une grille d'√©valuation standardis√©e",
      "üéØ Prioriser les am√©liorations selon l'impact business",
      "üí∞ Consid√©rer le ROI de chaque am√©lioration",
      "üîÑ R√©√©valuer r√©guli√®rement la qualit√©"
    ]
  }
];

export default function QuestionsDSCG() {
  const [expandedExercise, setExpandedExercise] = useState<number | null>(null);
  const [activeTab, setActiveTab] = useState<'solution' | 'methodology' | 'tips'>('solution');

  const toggleExercise = (id: number) => {
    setExpandedExercise(expandedExercise === id ? null : id);
    setActiveTab('solution');
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-4xl mx-auto px-6 py-8">
        <BackToPlanButton />
        
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            Cas pratiques - Suivi de Projet SI
          </h1>
          <p className="text-lg text-gray-600">
            Exercices d&apos;application pratique pour ma√Ætriser le suivi de projet SI dans le contexte DSCG.
          </p>
        </div>

        <div className="space-y-6">
          {exercises.map((exercise) => (
            <div key={exercise.id} className="bg-white rounded-2xl shadow-lg overflow-hidden">
              <button
                onClick={() => toggleExercise(exercise.id)}
                className="w-full p-6 text-left hover:bg-gray-50 transition-colors"
              >
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-xl font-semibold text-gray-900 mb-2">
                      Exercice {exercise.id} : {exercise.title}
                    </h2>
                    <p className="text-gray-600 line-clamp-2">
                      {exercise.context.split('\n')[0]}
                    </p>
                  </div>
                  <div className="ml-4">
                    {expandedExercise === exercise.id ? (
                      <ChevronDown className="h-6 w-6 text-gray-400" />
                    ) : (
                      <ChevronRight className="h-6 w-6 text-gray-400" />
                    )}
                  </div>
                </div>
              </button>

              <AnimatePresence>
                {expandedExercise === exercise.id && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: 'auto', opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="border-t border-gray-200"
                  >
                    <div className="p-6">
                      {/* Contexte */}
                      <div className="mb-6">
                        <h3 className="text-lg font-semibold text-gray-900 mb-3">
                          üìã Contexte
                        </h3>
                        <div className="bg-blue-50 border-l-4 border-blue-400 p-4 rounded-r-lg">
                          <pre className="whitespace-pre-wrap text-blue-800 font-medium">
                            {exercise.context}
                          </pre>
                        </div>
                      </div>

                      {/* Question */}
                      <div className="mb-6">
                        <h3 className="text-lg font-semibold text-gray-900 mb-3">
                          ‚ùì Question
                        </h3>
                        <div className="bg-orange-50 border-l-4 border-orange-400 p-4 rounded-r-lg">
                          <p className="text-orange-800 font-medium">{exercise.question}</p>
                        </div>
                      </div>

                      {/* Onglets */}
                      <div className="mb-4">
                        <div className="flex space-x-1 bg-gray-100 p-1 rounded-lg">
                          <button
                            onClick={() => setActiveTab('solution')}
                            className={`flex items-center gap-2 px-4 py-2 rounded-md transition-colors ${
                              activeTab === 'solution'
                                ? 'bg-white text-blue-600 shadow-sm'
                                : 'text-gray-600 hover:text-gray-900'
                            }`}
                          >
                            <CheckCircle className="h-4 w-4" />
                            Solution
                          </button>
                          <button
                            onClick={() => setActiveTab('methodology')}
                            className={`flex items-center gap-2 px-4 py-2 rounded-md transition-colors ${
                              activeTab === 'methodology'
                                ? 'bg-white text-blue-600 shadow-sm'
                                : 'text-gray-600 hover:text-gray-900'
                            }`}
                          >
                            <Target className="h-4 w-4" />
                            M√©thodologie
                          </button>
                          <button
                            onClick={() => setActiveTab('tips')}
                            className={`flex items-center gap-2 px-4 py-2 rounded-md transition-colors ${
                              activeTab === 'tips'
                                ? 'bg-white text-blue-600 shadow-sm'
                                : 'text-gray-600 hover:text-gray-900'
                            }`}
                          >
                            <Lightbulb className="h-4 w-4" />
                            Conseils
                          </button>
                        </div>
                      </div>

                      {/* Contenu des onglets */}
                      <AnimatePresence mode="wait">
                        <motion.div
                          key={activeTab}
                          initial={{ opacity: 0, y: 10 }}
                          animate={{ opacity: 1, y: 0 }}
                          exit={{ opacity: 0, y: -10 }}
                          transition={{ duration: 0.2 }}
                        >
                          {activeTab === 'solution' && (
                            <div className="bg-green-50 border border-green-200 rounded-lg p-6">
                              <h4 className="text-lg font-semibold text-green-800 mb-4 flex items-center gap-2">
                                <CheckCircle className="h-5 w-5" />
                                Solution d√©taill√©e
                              </h4>
                              <div className="space-y-2">
                                {exercise.solution.map((line, index) => (
                                  <div key={index} className="text-green-700">
                                    {line.startsWith('**') && line.endsWith('**') ? (
                                      <p className="font-semibold mt-3 mb-1">
                                        {line.replace(/\*\*/g, '')}
                                      </p>
                                    ) : line.startsWith('‚Ä¢') ? (
                                      <p className="ml-4">{line}</p>
                                    ) : line === '' ? (
                                      <div className="h-2" />
                                    ) : (
                                      <p>{line}</p>
                                    )}
                                  </div>
                                ))}
                              </div>
                            </div>
                          )}

                          {activeTab === 'methodology' && (
                            <div className="bg-purple-50 border border-purple-200 rounded-lg p-6">
                              <h4 className="text-lg font-semibold text-purple-800 mb-4 flex items-center gap-2">
                                <Target className="h-5 w-5" />
                                M√©thodologie de r√©solution
                              </h4>
                              <ol className="space-y-3">
                                {exercise.methodology.map((step, index) => (
                                  <li key={index} className="flex items-start gap-3">
                                    <span className="flex-shrink-0 w-6 h-6 bg-purple-600 text-white text-sm font-bold rounded-full flex items-center justify-center">
                                      {index + 1}
                                    </span>
                                    <span className="text-purple-700">{step}</span>
                                  </li>
                                ))}
                              </ol>
                            </div>
                          )}

                          {activeTab === 'tips' && (
                            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
                              <h4 className="text-lg font-semibold text-yellow-800 mb-4 flex items-center gap-2">
                                <Lightbulb className="h-5 w-5" />
                                Conseils et astuces
                              </h4>
                              <div className="space-y-3">
                                {exercise.tips.map((tip, index) => (
                                  <div key={index} className="flex items-start gap-3">
                                    <span className="text-yellow-600 text-lg">üí°</span>
                                    <span className="text-yellow-700">{tip}</span>
                                  </div>
                                ))}
                              </div>
                            </div>
                          )}
                        </motion.div>
                      </AnimatePresence>
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          ))}
        </div>

        {/* Navigation */}
        <div className="mt-12 pt-6 border-t border-gray-200">
          <div className="flex justify-between">
            <Link 
              href="/quiz" 
              className="inline-flex items-center gap-2 text-gray-600 hover:text-gray-800 transition-colors"
            >
              <ArrowLeft className="h-4 w-4" />
              Pr√©c√©dent : Quiz
            </Link>
            
            <div className="text-center">
              <div className="inline-flex items-center gap-2 bg-green-100 text-green-800 px-4 py-2 rounded-lg">
                <BookOpen className="h-4 w-4" />
                Cours termin√© !
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}